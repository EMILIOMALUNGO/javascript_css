{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var ListContext = React.createContext();\nexport var ListProvider = function ListProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasksList = _useState2[0],\n    setTasksList = _useState2[1];\n  var categoryList = [{\n    key: 'work',\n    value: 'work'\n  }, {\n    key: 'home',\n    value: 'home'\n  }, {\n    key: 'personal',\n    value: 'personal'\n  }, {\n    key: 'family',\n    value: 'family'\n  }, {\n    key: 'Studies',\n    value: 'Studies'\n  }];\n  var addTask = function addTask(tarefa) {\n    tasksList.push([tarefa.titulo, tarefa.category, tarefa.data]);\n    var funcaoFiltradora = function funcaoFiltradora(selected) {\n      if (selected == true) {\n        tasksList.find(function (e) {\n          return e = tarefa.category;\n        });\n      }\n    };\n  };\n  useEffect(function () {\n    funcaoFiltradora();\n  }, []);\n  return _jsx(ListContext.Provider, {\n    value: {\n      tasksList: tasksList,\n      setTasksList: setTasksList,\n      addTask: addTask,\n      categoryList: categoryList\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","useEffect","useState","AsyncStorage","ListContext","createContext","ListProvider","children","tasksList","setTasksList","categoryList","key","value","addTask","tarefa","push","titulo","category","data","funcaoFiltradora","selected","find","e"],"sources":["C:/Users/moises.psilva5/Desktop/Projetos/projeto_final/todoList/context/ListCreate.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport const ListContext = React.createContext()\r\n\r\nexport const ListProvider = ({children}) => {\r\n    \r\n    \r\n    const [tasksList, setTasksList] = useState([]) \r\n\r\n    const categoryList = [ {key: 'work', value: 'work'},\r\n     {key: 'home', value: 'home'},\r\n      {key: 'personal', value: 'personal'},\r\n       {key: 'family', value: 'family'},\r\n        {key: 'Studies', value: 'Studies'} ]\r\n    \r\n    const addTask = (tarefa) => {\r\n        tasksList.push([tarefa.titulo, tarefa.category, tarefa.data])\r\n        \r\n        const funcaoFiltradora = (selected) => {\r\n            if(selected == true ){\r\n                tasksList.find((e) => e = tarefa.category)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        funcaoFiltradora()\r\n    }, [])\r\n\r\n    return (\r\n        <ListContext.Provider value={{tasksList, setTasksList, addTask, categoryList}}>\r\n            { children }\r\n        </ListContext.Provider>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,YAAY,MAAM,2CAA2C;AAAC;AAErE,OAAO,IAAMC,WAAW,GAAGJ,KAAK,CAACK,aAAa,EAAE;AAEhD,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAAmB;EAAA,IAAdC,QAAQ,QAARA,QAAQ;EAGlC,gBAAkCL,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCM,SAAS;IAAEC,YAAY;EAE9B,IAAMC,YAAY,GAAG,CAAE;IAACC,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAM,CAAC,EAClD;IAACD,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC3B;IAACD,GAAG,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAU,CAAC,EACnC;IAACD,GAAG,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAC/B;IAACD,GAAG,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAS,CAAC,CAAE;EAExC,IAAMC,OAAO,GAAG,SAAVA,OAAO,CAAIC,MAAM,EAAK;IACxBN,SAAS,CAACO,IAAI,CAAC,CAACD,MAAM,CAACE,MAAM,EAAEF,MAAM,CAACG,QAAQ,EAAEH,MAAM,CAACI,IAAI,CAAC,CAAC;IAE7D,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,QAAQ,EAAK;MACnC,IAAGA,QAAQ,IAAI,IAAI,EAAE;QACjBZ,SAAS,CAACa,IAAI,CAAC,UAACC,CAAC;UAAA,OAAKA,CAAC,GAAGR,MAAM,CAACG,QAAQ;QAAA,EAAC;MAC9C;IACJ,CAAC;EACL,CAAC;EAEDhB,SAAS,CAAC,YAAK;IACXkB,gBAAgB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,OACI,KAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACX,SAAS,EAATA,SAAS;MAAEC,YAAY,EAAZA,YAAY;MAAEI,OAAO,EAAPA,OAAO;MAAEH,YAAY,EAAZA;IAAY,CAAE;IAAA,UACxEH;EAAQ,EACS;AAE/B,CAAC"},"metadata":{},"sourceType":"module"}