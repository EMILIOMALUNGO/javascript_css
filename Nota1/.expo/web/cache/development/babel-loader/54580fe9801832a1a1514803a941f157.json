{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Notas from \"./src/Notas\";\nimport Aluno from \"./src/Aluno\";\nimport Resultado from \"./src/Resultado\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      lista = _React$useState2[0],\n      setLista = _React$useState2[1];\n\n  var mostrar = function mostrar(numero) {\n    var valores = [];\n\n    for (var c = numero; c >= 1; --c) {\n      var resto = numero % c;\n\n      if (resto == 0) {\n        valores.push(c);\n      }\n    }\n\n    setLista(valores);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Notas, {\n      nome: \"Notas\"\n    }), _jsx(Aluno, {\n      items: Aluno\n    }), _jsx(Aluno, {\n      onMostrar: Notas\n    }), _jsx(Lista1, {\n      items: Lista1\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","Notas","Aluno","Resultado","App","React","useState","lista","setLista","mostrar","numero","valores","c","resto","push","Lista1","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/Bakongo/Documents/documento.Bakongo.projeto/Nota1/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\n\n\nimport Notas from './src/Notas';\nimport Aluno from './src/Aluno';\n\nimport Resultado from './src/Resultado';\n\n\n\nexport default function App() {\n  const [lista, setLista] = React.useState([])\n\n  const mostrar = (numero) => {\n    let valores = [];\n\n    for (let c= numero;  c >= 1; --c) {\n      let resto = numero % c;\n      if (resto == 0) {\n        valores.push(c);\n      }\n    }\n    setLista(valores); \n  }\n  \n  return (\n    <View >\n      <Notas nome=\"Notas\"/>\n      <Aluno items={Aluno} />\n      <Aluno onMostrar={Notas} />\n      <Lista1 items={Lista1} />\n\n      </View>\n     \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;AAIA,OAAOC,KAAP;AACA,OAAOC,KAAP;AAEA,OAAOC,SAAP;;;AAIA,eAAe,SAASC,GAAT,GAAe;EAC5B,sBAA0BC,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAAY;IAC1B,IAAIC,OAAO,GAAG,EAAd;;IAEA,KAAK,IAAIC,CAAC,GAAEF,MAAZ,EAAqBE,CAAC,IAAI,CAA1B,EAA6B,EAAEA,CAA/B,EAAkC;MAChC,IAAIC,KAAK,GAAGH,MAAM,GAAGE,CAArB;;MACA,IAAIC,KAAK,IAAI,CAAb,EAAgB;QACdF,OAAO,CAACG,IAAR,CAAaF,CAAb;MACD;IACF;;IACDJ,QAAQ,CAACG,OAAD,CAAR;EACD,CAVD;;EAYA,OACE,MAAC,IAAD;IAAA,WACE,KAAC,KAAD;MAAO,IAAI,EAAC;IAAZ,EADF,EAEE,KAAC,KAAD;MAAO,KAAK,EAAET;IAAd,EAFF,EAGE,KAAC,KAAD;MAAO,SAAS,EAAED;IAAlB,EAHF,EAIE,KAAC,MAAD;MAAQ,KAAK,EAAEc;IAAf,EAJF;EAAA,EADF;AAUD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}