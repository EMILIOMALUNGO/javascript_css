{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Registrar(props) {\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      estilos = _React$useState2[0],\n      setEstilos = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lista = _React$useState4[0],\n      setLista = _React$useState4[1];\n\n  var mostrar = function mostrar(estilos) {\n    var arr = [];\n\n    for (var i = 0; i <= estilos; i++) {\n      arr.push(i);\n    }\n\n    setLista(arr);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"test\",\n      style: styles.input,\n      value: estilos,\n      onChangeText: setEstilos\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return mostrar();\n      },\n      children: _jsx(Text, {\n        style: styles.textButton,\n        children: \"Registrar\"\n      })\n    }), _jsx(Text, {\n      children: lista\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff'\n  },\n  textButton: {\n    padding: 20,\n    fontSize: 20,\n    marginTop: 20,\n    marginBottom: 10,\n    borderWidth: 1,\n    textAlign: \"center\",\n    backgroundColor: \"#78D629\"\n  }\n});","map":{"version":3,"names":["useState","React","Registrar","props","estilos","setEstilos","lista","setLista","mostrar","arr","i","push","styles","container","input","button","textButton","StyleSheet","create","backgroundColor","padding","fontSize","marginTop","marginBottom","borderWidth","textAlign"],"sources":["C:/Users/Bakongo/Documents/documento.Bakongo.projeto/praTestar/src/components/Registrar.js"],"sourcesContent":["import { useState } from 'react';\r\nimport React from 'react';\r\nimport { StyleSheet,StatusBar,TouchableOpacity, Text, View,TextInput } from 'react-native';\r\n\r\n\r\nexport default function Registrar(props) {\r\n  const [estilos, setEstilos]= React.useState()\r\n  const [ lista, setLista] = React.useState([])\r\n\r\n  const mostrar= (estilos) => {\r\n    let arr =[]\r\n    for(let i=0; i <= estilos; i++){\r\n      arr.push(i)\r\n    }\r\n    setLista(arr)\r\n  }\r\n    return (\r\n      <View style={styles.container}>\r\n        <TextInput placeholder='test' style={styles.input} value={estilos} onChangeText={setEstilos} />\r\n\r\n          {/* <Campo estilos=\"Nome\"/>\r\n          <Campo estilos=\"E-mail\" />\r\n          <Campo estilos=\"Senha\" />\r\n          <Campo estilos=\"Senha\" /> */}\r\n             <TouchableOpacity style={styles.button} onPress={() => mostrar()}>\r\n          <Text style={styles.textButton}>Registrar</Text>\r\n        </TouchableOpacity>\r\n        <Text>{lista}</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#fff',\r\n    },\r\n\r\n    textButton:{\r\n     padding:20,\r\n \r\n      fontSize:20,\r\n      marginTop:20,\r\n     marginBottom:10,\r\n     borderWidth:1 ,\r\n     textAlign:\"center\",\r\n     backgroundColor:\"#78D629\"\r\n\r\n    },\r\n\r\n  });"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;;AAIA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACvC,sBAA6BF,KAAK,CAACD,QAAN,EAA7B;EAAA;EAAA,IAAOI,OAAP;EAAA,IAAgBC,UAAhB;;EACA,uBAA2BJ,KAAK,CAACD,QAAN,CAAe,EAAf,CAA3B;EAAA;EAAA,IAAQM,KAAR;EAAA,IAAeC,QAAf;;EAEA,IAAMC,OAAO,GAAE,SAATA,OAAS,CAACJ,OAAD,EAAa;IAC1B,IAAIK,GAAG,GAAE,EAAT;;IACA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAIN,OAAlB,EAA2BM,CAAC,EAA5B,EAA+B;MAC7BD,GAAG,CAACE,IAAJ,CAASD,CAAT;IACD;;IACDH,QAAQ,CAACE,GAAD,CAAR;EACD,CAND;;EAOE,OACE,MAAC,IAAD;IAAM,KAAK,EAAEG,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,SAAD;MAAW,WAAW,EAAC,MAAvB;MAA8B,KAAK,EAAED,MAAM,CAACE,KAA5C;MAAmD,KAAK,EAAEV,OAA1D;MAAmE,YAAY,EAAEC;IAAjF,EADF,EAOO,KAAC,gBAAD;MAAkB,KAAK,EAAEO,MAAM,CAACG,MAAhC;MAAwC,OAAO,EAAE;QAAA,OAAMP,OAAO,EAAb;MAAA,CAAjD;MAAA,UACH,KAAC,IAAD;QAAM,KAAK,EAAEI,MAAM,CAACI,UAApB;QAAA;MAAA;IADG,EAPP,EAUE,KAAC,IAAD;MAAA,UAAOV;IAAP,EAVF;EAAA,EADF;AAcD;AAED,IAAMM,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,SAAS,EAAE;IACPM,eAAe,EAAE;EADV,CADoB;EAK/BH,UAAU,EAAC;IACVI,OAAO,EAAC,EADE;IAGTC,QAAQ,EAAC,EAHA;IAITC,SAAS,EAAC,EAJD;IAKVC,YAAY,EAAC,EALH;IAMVC,WAAW,EAAC,CANF;IAOVC,SAAS,EAAC,QAPA;IAQVN,eAAe,EAAC;EARN;AALoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}