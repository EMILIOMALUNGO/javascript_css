{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ShadowPropTypesIOS } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Header from \"../components/Header\";\nimport Lista from \"../components/Lista\";\nimport Resultado from \"../components/Resultado\";\nimport Titulo from \"../components/Titulo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DivisivelPage() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      lista = _React$useState2[0],\n      setLista = _React$useState2[1];\n\n  var mostrar = function mostrar(numero) {\n    var valores = [];\n\n    for (var c = 1; c >= numero; --c) {\n      var resto = numero % c;\n\n      if (resto == 0) {\n        valores.push(c);\n      }\n    }\n\n    setLista(valores);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Titulo, {\n      title: \"DIVISIVEL POR\"\n    }), _jsx(Header, {\n      onMostrar: mostrar\n    }), _jsx(Lista, {\n      items: lista\n    }), _jsx(Resultado, {\n      resul: \"Total \" + lista.length + \" numero\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"names":["React","ShadowPropTypesIOS","Header","Lista","Resultado","Titulo","DivisivelPage","useState","lista","setLista","mostrar","numero","valores","c","resto","push","styles","container","length","StyleSheet","create","flex","backgroundColor"],"sources":["C:/Users/Bakongo/Documents/documento.Bakongo.projeto/matematica/src/pages/DivisivelPage.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport { StyleSheet, StatusBar, Text, View, Button, ShadowPropTypesIOS, TextInput } from 'react-native';\r\nimport Header from \"../components/Header\";\r\nimport Lista from \"../components/Lista\";\r\nimport Resultado from \"../components/Resultado\";\r\nimport Titulo from \"../components/Titulo\";\r\n\r\n\r\n\r\nexport default function DivisivelPage() {\r\n  const [lista, setLista] = React.useState([])\r\n\r\n  const mostrar = (numero) => {\r\n    let valores = [];\r\n\r\n    for (let c = 1; c >= numero; --c) {\r\n      let resto = numero % c;\r\n      if (resto == 0) {\r\n        valores.push(c);\r\n      }\r\n    }\r\n    setLista(valores); \r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Titulo title=\"DIVISIVEL POR\" />\r\n      <Header onMostrar={mostrar} />\r\n      <Lista items={lista} />\r\n      <Resultado resul={`Total ${lista.length} numero`} />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n\r\n  },\r\n\r\n});\r\n\r\n"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;SACoDC,kB;;AACpD,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;;;AAIA,eAAe,SAASC,aAAT,GAAyB;EACtC,sBAA0BN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA1B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAAY;IAC1B,IAAIC,OAAO,GAAG,EAAd;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,MAArB,EAA6B,EAAEE,CAA/B,EAAkC;MAChC,IAAIC,KAAK,GAAGH,MAAM,GAAGE,CAArB;;MACA,IAAIC,KAAK,IAAI,CAAb,EAAgB;QACdF,OAAO,CAACG,IAAR,CAAaF,CAAb;MACD;IACF;;IACDJ,QAAQ,CAACG,OAAD,CAAR;EACD,CAVD;;EAYA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEI,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,MAAD;MAAQ,KAAK,EAAC;IAAd,EADF,EAEE,KAAC,MAAD;MAAQ,SAAS,EAAEP;IAAnB,EAFF,EAGE,KAAC,KAAD;MAAO,KAAK,EAAEF;IAAd,EAHF,EAIE,KAAC,SAAD;MAAW,KAAK,aAAWA,KAAK,CAACU,MAAjB;IAAhB,EAJF;EAAA,EADF;AAQD;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CADG;IAETC,eAAe,EAAE;EAFR;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}