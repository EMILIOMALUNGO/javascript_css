{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ShadowPropTypesIOS } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Titulo from \"./src/components/Titulo\";\nimport Header from \"./src/components/Header\";\nimport Lista from \"./src/components/Lista\";\nimport Resultado from \"./src/components/Resultado\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      lista = _React$useState2[0],\n      setLista = _React$useState2[1];\n\n  var mostrar = function mostrar(numero) {\n    var valores = [];\n\n    for (var c = 1; c <= numero; c++) {\n      var resto = numero % c;\n\n      if (resto == 0) {\n        valores.push(c);\n      }\n    }\n\n    setLista(valores);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Titulo, {\n      title: \"DIVISIVEL POR\"\n    }), _jsx(Header, {\n      onMostrar: mostrar\n    }), _jsx(Lista, {\n      items: lista\n    }), _jsx(Resultado, {\n      resul: \"Total \" + lista.length + \" numero\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"names":["React","ShadowPropTypesIOS","Titulo","Header","Lista","Resultado","App","useState","lista","setLista","mostrar","numero","valores","c","resto","push","length","styles","StyleSheet","create","container","flex","backgroundColor"],"sources":["C:/Users/Bakongo/Documents/documento.Bakongo.projeto/matematica/App.js"],"sourcesContent":["\nimport React from \"react\";\nimport { StyleSheet, StatusBar, Text, View, Button, ShadowPropTypesIOS, TextInput } from 'react-native';\n\n\nimport Titulo from \"./src/components/Titulo\";\n\nimport Header from \"./src/components/Header\";\n\nimport Lista from \"./src/components/Lista\";\n\nimport Resultado from \"./src/components/Resultado\";\n\n\nexport default function App() {\n  const [lista, setLista] = React.useState([])\n\n  const mostrar = (numero) => {\n    let valores = [];\n\n    for (let c = 1; c <= numero; c++) {\n      let resto = numero % c;\n      if (resto == 0) {\n        valores.push(c);\n      }\n    }\n    setLista(valores);\n  }\n\n  return (\n    <View>\n      <Titulo title=\"DIVISIVEL POR\" />\n      <Header onMostrar={mostrar} />\n      <Lista items={lista} />\n      <Resultado resul={`Total ${lista.length} numero`} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n\n  },\n\n});\n\n"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;SACoDC,kB;;AAGpD,OAAOC,MAAP;AAEA,OAAOC,MAAP;AAEA,OAAOC,KAAP;AAEA,OAAOC,SAAP;;;AAGA,eAAe,SAASC,GAAT,GAAe;EAC5B,sBAA0BN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA1B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAAY;IAC1B,IAAIC,OAAO,GAAG,EAAd;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,MAArB,EAA6BE,CAAC,EAA9B,EAAkC;MAChC,IAAIC,KAAK,GAAGH,MAAM,GAAGE,CAArB;;MACA,IAAIC,KAAK,IAAI,CAAb,EAAgB;QACdF,OAAO,CAACG,IAAR,CAAaF,CAAb;MACD;IACF;;IACDJ,QAAQ,CAACG,OAAD,CAAR;EACD,CAVD;;EAYA,OACE,MAAC,IAAD;IAAA,WACE,KAAC,MAAD;MAAQ,KAAK,EAAC;IAAd,EADF,EAEE,KAAC,MAAD;MAAQ,SAAS,EAAEF;IAAnB,EAFF,EAGE,KAAC,KAAD;MAAO,KAAK,EAAEF;IAAd,EAHF,EAIE,KAAC,SAAD;MAAW,KAAK,aAAWA,KAAK,CAACQ,MAAjB;IAAhB,EAJF;EAAA,EADF;AAQD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CADG;IAETC,eAAe,EAAE;EAFR;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}